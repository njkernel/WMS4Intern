<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.connext.wms.dao.InRepertoryMapper">
    <resultMap id="BaseResultMap" type="com.connext.wms.entity.InRepertory">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="in_repo_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="order_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="channel_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="express_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="express_company" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="in_repo_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sync_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="receiving_repo" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="reviser" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="revise_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <resultMap id="get_one_detail" type="com.connext.wms.entity.InRepertory">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="in_repo_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="order_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="channel_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="express_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="express_company" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="in_repo_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sync_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="receiving_repo" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="reviser" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="revise_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
        <collection property="repertoryDetails" ofType="com.connext.wms.entity.InRepertoryDetail" resultMap="detail" columnPrefix="detail_" />
    </resultMap>
    <resultMap id="detail" type="com.connext.wms.entity.InRepertoryDetail">
        <id property="id" column="id"/>
        <result property="inRepoId" column="in_repo_id"/>
        <result property="goodsId" column="goods_id"/>
        <result property="goodsName" column="goods_name"/>
        <result property="goodsNum" column="goods_num"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id,
        in_repo_id,
        order_id,
        channel_id,
        express_id,
        express_company,
        in_repo_status,
        sync_status,
        receiving_repo,
        create_time,
        reviser,
        revise_time
    </sql>
    <select id="getOne" parameterType="java.lang.Integer" resultMap="get_one_detail">
        SELECT t_in_repo.id,
               t_in_repo.in_repo_id,
               t_in_repo.order_id,
               t_in_repo.channel_id,
               t_in_repo.express_id,
               t_in_repo.express_company,
               t_in_repo.in_repo_status,
               t_in_repo.sync_status,
               t_in_repo.receiving_repo,
               t_in_repo.create_time,
               t_in_repo.reviser,
               t_in_repo.revise_time,
               t_in_repo_items.id as detail_id,
               t_in_repo_items.in_repo_id as detail_in_repo_id,
               t_in_repo_items.goods_id as detail_goods_id,
               t_in_repo_items.goods_name as detail_goods_name,
               t_in_repo_items.goods_num as detail_goods_num
        FROM t_in_repo
                 INNER JOIN t_in_repo_items ON t_in_repo.in_repo_id = t_in_repo_items.in_repo_id
        WHERE t_in_repo.id = #{id}

    </select>
    <select id="selectByExample" parameterType="com.connext.wms.entity.InRepertoryExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_in_repo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_in_repo
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="findAllLike" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_in_repo
        where
        <if test="status!='null'">
            in_repo_status=#{status} and
        </if>
        (in_repo_id like #{like} OR order_id like #{like} or express_id like #{like} or channel_id like #{like})
        order by revise_time DESC
    </select>
    <select id="getPage" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_in_repo
        order by revise_time DESC
    </select>
    <select id="getPageBy" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_in_repo
        where in_repo_status=#{status}
        order by revise_time DESC
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from t_in_repo
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.connext.wms.entity.InRepertoryExample">
        delete from t_in_repo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.connext.wms.entity.InRepertory">
        insert into t_in_repo (id, in_repo_id, order_id,
                               channel_id, express_id, express_company,
                               in_repo_status, sync_status, receiving_repo,
                               create_time, reviser, revise_time)
        values (#{id,jdbcType=INTEGER}, #{inRepoId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR},
                #{channelId,jdbcType=VARCHAR}, #{expressId,jdbcType=VARCHAR}, #{expressCompany,jdbcType=VARCHAR},
                #{inRepoStatus,jdbcType=VARCHAR}, #{syncStatus,jdbcType=VARCHAR}, #{receivingRepo,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{reviser,jdbcType=VARCHAR}, #{reviseTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.connext.wms.entity.InRepertory">
        insert into t_in_repo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="inRepoId != null">
                in_repo_id,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="channelId != null">
                channel_id,
            </if>
            <if test="expressId != null">
                express_id,
            </if>
            <if test="expressCompany != null">
                express_company,
            </if>
            <if test="inRepoStatus != null">
                in_repo_status,
            </if>
            <if test="syncStatus != null">
                sync_status,
            </if>
            <if test="receivingRepo != null">
                receiving_repo,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="reviser != null">
                reviser,
            </if>
            <if test="reviseTime != null">
                revise_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="inRepoId != null">
                #{inRepoId,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="channelId != null">
                #{channelId,jdbcType=VARCHAR},
            </if>
            <if test="expressId != null">
                #{expressId,jdbcType=VARCHAR},
            </if>
            <if test="expressCompany != null">
                #{expressCompany,jdbcType=VARCHAR},
            </if>
            <if test="inRepoStatus != null">
                #{inRepoStatus,jdbcType=VARCHAR},
            </if>
            <if test="syncStatus != null">
                #{syncStatus,jdbcType=VARCHAR},
            </if>
            <if test="receivingRepo != null">
                #{receivingRepo,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="reviser != null">
                #{reviser,jdbcType=VARCHAR},
            </if>
            <if test="reviseTime != null">
                #{reviseTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.connext.wms.entity.InRepertoryExample" resultType="java.lang.Long">
        select count(*) from t_in_repo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_in_repo
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.inRepoId != null">
                in_repo_id = #{record.inRepoId,jdbcType=VARCHAR},
            </if>
            <if test="record.orderId != null">
                order_id = #{record.orderId,jdbcType=VARCHAR},
            </if>
            <if test="record.channelId != null">
                channel_id = #{record.channelId,jdbcType=VARCHAR},
            </if>
            <if test="record.expressId != null">
                express_id = #{record.expressId,jdbcType=VARCHAR},
            </if>
            <if test="record.expressCompany != null">
                express_company = #{record.expressCompany,jdbcType=VARCHAR},
            </if>
            <if test="record.inRepoStatus != null">
                in_repo_status = #{record.inRepoStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.syncStatus != null">
                sync_status = #{record.syncStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.receivingRepo != null">
                receiving_repo = #{record.receivingRepo,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.reviser != null">
                reviser = #{record.reviser,jdbcType=VARCHAR},
            </if>
            <if test="record.reviseTime != null">
                revise_time = #{record.reviseTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_in_repo
        set id = #{record.id,jdbcType=INTEGER},
        in_repo_id = #{record.inRepoId,jdbcType=VARCHAR},
        order_id = #{record.orderId,jdbcType=VARCHAR},
        channel_id = #{record.channelId,jdbcType=VARCHAR},
        express_id = #{record.expressId,jdbcType=VARCHAR},
        express_company = #{record.expressCompany,jdbcType=VARCHAR},
        in_repo_status = #{record.inRepoStatus,jdbcType=VARCHAR},
        sync_status = #{record.syncStatus,jdbcType=VARCHAR},
        receiving_repo = #{record.receivingRepo,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        reviser = #{record.reviser,jdbcType=VARCHAR},
        revise_time = #{record.reviseTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.connext.wms.entity.InRepertory">
        update t_in_repo
        <set>
            <if test="inRepoId != null">
                in_repo_id = #{inRepoId,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="channelId != null">
                channel_id = #{channelId,jdbcType=VARCHAR},
            </if>
            <if test="expressId != null">
                express_id = #{expressId,jdbcType=VARCHAR},
            </if>
            <if test="expressCompany != null">
                express_company = #{expressCompany,jdbcType=VARCHAR},
            </if>
            <if test="inRepoStatus != null">
                in_repo_status = #{inRepoStatus,jdbcType=VARCHAR},
            </if>
            <if test="syncStatus != null">
                sync_status = #{syncStatus,jdbcType=VARCHAR},
            </if>
            <if test="receivingRepo != null">
                receiving_repo = #{receivingRepo,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="reviser != null">
                reviser = #{reviser,jdbcType=VARCHAR},
            </if>
            <if test="reviseTime != null">
                revise_time = #{reviseTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.connext.wms.entity.InRepertory">
        update t_in_repo
        set in_repo_id      = #{inRepoId,jdbcType=VARCHAR},
            order_id        = #{orderId,jdbcType=VARCHAR},
            channel_id      = #{channelId,jdbcType=VARCHAR},
            express_id      = #{expressId,jdbcType=VARCHAR},
            express_company = #{expressCompany,jdbcType=VARCHAR},
            in_repo_status  = #{inRepoStatus,jdbcType=VARCHAR},
            sync_status     = #{syncStatus,jdbcType=VARCHAR},
            receiving_repo  = #{receivingRepo,jdbcType=VARCHAR},
            create_time     = #{createTime,jdbcType=TIMESTAMP},
            reviser         = #{reviser,jdbcType=VARCHAR},
            revise_time     = #{reviseTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>